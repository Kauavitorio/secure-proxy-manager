name: Test Squid Proxy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker image
        run: docker-compose build

      - name: Start Docker container
        run: docker-compose up -d

      - name: Wait for Squid to start
        run: sleep 30

      - name: Basic Setup Test
        run: |
            docker logs squid-proxy
            curl -x http://localhost:3128 http://example.com || true
            curl -x https://localhost:3129 https://example.com --insecure || true

      - name: Blocklist Tests
        run: |
            echo "testing blocklist"
            if curl -x http://localhost:3128 http://doubleclick.net || true; then
              echo "Error: Blocklisted domain is reachable. Verify your blocklist settings."
              exit 1
            else
              echo "Ok: Blocklisted domain is not reachable."
            fi
            if curl -x http://localhost:3128 http://185.216.137.28 || true; then
               echo "Error: Blocklisted ip is reachable. Verify your blocklist settings."
               exit 1
            else
              echo "Ok: Blocklisted ip is not reachable."
            fi

      - name: Whitelist Tests
        run: |
          echo "testing whitelist"
          if ! curl -x http://localhost:3128 http://example.com || true; then
             echo "Error: Whitelisted domain is unreachable. Verify your whitelist settings."
              exit 1
          else
             echo "Ok: Whitelisted domain is reachable."
          fi
          if ! curl -x http://localhost:3128 http://192.168.1.1 || true; then
             echo "Error: Whitelisted IP is unreachable. Verify your whitelist settings."
             exit 1
          else
            echo "Ok: Whitelisted IP is reachable."
          fi


      - name: Direct IP Connection Test
        run: |
            echo "testing direct connections"
            if curl -x http://localhost:3128 http://10.0.0.1 --connect-timeout 10 || true ; then
                echo "Error: Direct ip is reachable. Verify your network settings."
              exit 1
            else
                echo "Ok: Direct ip is unreachable"
             fi

      - name: Authentication Test
        run: |
            echo "testing authentication"
            if ! curl -x http://testuser:testpassword@localhost:3128 http://example.com --connect-timeout 10 || true ; then
                echo "Error: Authentication failed. Verify your user settings."
              exit 1
            else
                echo "Ok: Authentication successfull"
             fi
            if  curl -x http://testuser:invalid@localhost:3128 http://example.com --connect-timeout 10 || true; then
                echo "Error: Authentication should be failed with invalid password. Verify your user settings."
              exit 1
            else
                echo "Ok: Authentication failed as expected"
             fi

      - name: Environment Variable Override Test
        run: |
           echo "testing environment variables"
           
           # Check http_port
           if docker exec squid-proxy grep "http_port 3129" /etc/squid/squid.conf | grep -q .; then
               echo "Ok: http_port set with environment variables"
           else
               echo "Error: http_port is not set with environment variables"
               exit 1
           fi

           # Check cache_dir
           if docker exec squid-proxy grep "cache_dir ufs /var/spool/squid 600" /etc/squid/squid.conf | grep -q .; then
             echo "Ok: cache_dir set with environment variables"
           else
               echo "Error: cache_dir is not set with environment variables"
               exit 1
           fi


           # Check external dns
            if ! docker exec squid-proxy grep 'dns_nameservers' /etc/squid/squid.conf  | grep "8.8.8.8 8.8.4.4"  ; then
                 echo "Ok: external dns set correctly with environment variables"
             else
                 echo "Error: external dns is not set correctly with environment variables"
                 exit 1
             fi

           # Check https_port
           if docker exec squid-proxy grep "https_port 3130" /etc/squid/squid.conf | grep -q .; then
             echo "Ok: https_port set correctly with environment variables"
           else
             echo "Error: https_port is not set with environment variables"
             exit 1
           fi
      - name: Stop Docker container
        if: always()
        run: docker-compose down
