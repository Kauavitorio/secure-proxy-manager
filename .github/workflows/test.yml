name: Test Squid Configuration Generation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SQUID_IMAGE: "sameersbn/squid:latest"  # Official Squid image

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]  # Define Python versions directly

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python-version }}-
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate Squid configuration
        run: |
          python generate_squid_conf.py
          echo "Generated squid.conf:"
          cat squid.conf

      - name: Validate Squid configuration file
        run: |
          if [ ! -f squid.conf ]; then
            echo "Error: squid.conf file not found!"
            exit 1
          fi
          echo "squid.conf file exists and is ready for testing."

      - name: Validate Squid configuration in Docker
        run: |
          docker run --rm \
            -v $(pwd)/squid.conf:/etc/squid/squid.conf \
            ${{ env.SQUID_IMAGE }} \
            squid -k parse

      - name: Upload squid.conf as artifact
        uses: actions/upload-artifact@v3
        with:
          name: squid.conf
          path: squid.conf
